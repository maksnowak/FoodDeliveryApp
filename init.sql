-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.restaurants
(
    restaurant_id integer NOT NULL,
    name character varying(60) NOT NULL,
    opens_weekdays time without time zone,
    closes_weekdays time without time zone,
    opens_weekends time without time zone,
    closes_weekends time without time zone,
    PRIMARY KEY (restaurant_id)
);

CREATE TABLE IF NOT EXISTS public.dishes
(
    dish_id integer NOT NULL,
    name character varying(60) NOT NULL,
    restaurant_id integer NOT NULL,
    type_id integer NOT NULL,
    vegetarian boolean NOT NULL,
    price numeric(5, 2) NOT NULL,
    kcal numeric(4, 1),
    PRIMARY KEY (dish_id)
);

CREATE TABLE IF NOT EXISTS public.dish_types
(
    type_id integer NOT NULL,
    name character varying(20) NOT NULL,
    PRIMARY KEY (type_id)
);

CREATE TABLE IF NOT EXISTS public.account_types
(
    type_id integer NOT NULL,
    name character varying(20) NOT NULL,
    PRIMARY KEY (type_id)
);

CREATE TABLE IF NOT EXISTS public.accounts
(
    email character varying(30) NOT NULL,
    password character varying(50) NOT NULL,
    type integer NOT NULL,
    name character varying(20),
    surname character varying(20),
    restaurant_id integer,
    PRIMARY KEY (email)
);

CREATE TABLE IF NOT EXISTS public.orders
(
    order_id integer NOT NULL,
    status integer NOT NULL,
    customer character varying(30) NOT NULL,
    total numeric(7, 2) NOT NULL,
    payment_method integer NOT NULL,
    street character(40) NOT NULL,
    street_number integer NOT NULL,
    apartment integer,
    city character varying(40) NOT NULL,
    discount_code character varying(10),
    tip numeric(7, 2),
    PRIMARY KEY (order_id)
);

CREATE TABLE IF NOT EXISTS public.payment_methods
(
    method_id integer NOT NULL,
    card_number numeric(16, 0) NOT NULL,
    expiry_date date NOT NULL,
    cvv numeric(3, 0) NOT NULL,
    customer character varying(30) NOT NULL,
    PRIMARY KEY (method_id)
);

CREATE TABLE IF NOT EXISTS public.favorites
(
    dish_id integer NOT NULL,
    customer character varying(30) NOT NULL
);

CREATE TABLE IF NOT EXISTS public.statuses
(
    status_id integer NOT NULL,
    name character varying(20) NOT NULL,
    PRIMARY KEY (status_id)
);

CREATE TABLE IF NOT EXISTS public.discounts
(
    code character varying(10) NOT NULL,
    discount numeric(4, 2) NOT NULL,
    PRIMARY KEY (code)
);

CREATE TABLE IF NOT EXISTS public.reviews
(
    review_id integer NOT NULL,
    resturant_id integer NOT NULL,
    customer character varying(30) NOT NULL,
    stars integer NOT NULL,
    description character varying(500),
    PRIMARY KEY (review_id)
);

CREATE TABLE IF NOT EXISTS public.complaints
(
    complaint_id integer NOT NULL,
    order_id integer NOT NULL,
    description character varying(500) NOT NULL,
    is_open boolean NOT NULL DEFAULT 'yes',
    PRIMARY KEY (complaint_id)
);

CREATE TABLE IF NOT EXISTS public.baskets
(
    customer character varying(30) NOT NULL,
    dish_id integer NOT NULL
);

CREATE TABLE IF NOT EXISTS public.ordered_dishes
(
    order_id integer,
    dish_id integer
);

ALTER TABLE IF EXISTS public.dishes
    ADD CONSTRAINT restaurant_fk FOREIGN KEY (restaurant_id)
    REFERENCES public.restaurants (restaurant_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.dishes
    ADD CONSTRAINT type_fk FOREIGN KEY (type_id)
    REFERENCES public.dish_types (type_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.accounts
    ADD CONSTRAINT type_fk FOREIGN KEY (type)
    REFERENCES public.account_types (type_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.accounts
    ADD CONSTRAINT restaurant_fk FOREIGN KEY (restaurant_id)
    REFERENCES public.restaurants (restaurant_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT customer_fk FOREIGN KEY (customer)
    REFERENCES public.accounts (email) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT status_fk FOREIGN KEY (status)
    REFERENCES public.statuses (status_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT discount_fk FOREIGN KEY (discount_code)
    REFERENCES public.discounts (code) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT payment_fk FOREIGN KEY (payment_method)
    REFERENCES public.payment_methods (method_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.payment_methods
    ADD CONSTRAINT customer_fk FOREIGN KEY (customer)
    REFERENCES public.accounts (email) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.favorites
    ADD CONSTRAINT dish_fk FOREIGN KEY (dish_id)
    REFERENCES public.dishes (dish_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.favorites
    ADD CONSTRAINT customer_fk FOREIGN KEY (customer)
    REFERENCES public.accounts (email) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.reviews
    ADD CONSTRAINT restaurant_fk FOREIGN KEY (resturant_id)
    REFERENCES public.restaurants (restaurant_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.reviews
    ADD CONSTRAINT customer_fk FOREIGN KEY (customer)
    REFERENCES public.accounts (email) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.complaints
    ADD CONSTRAINT order_fk FOREIGN KEY (order_id)
    REFERENCES public.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.baskets
    ADD CONSTRAINT dish_fk FOREIGN KEY (dish_id)
    REFERENCES public.dishes (dish_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.baskets
    ADD CONSTRAINT customer_fk FOREIGN KEY (customer)
    REFERENCES public.accounts (email) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.ordered_dishes
    ADD CONSTRAINT order_fk FOREIGN KEY (order_id)
    REFERENCES public.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.ordered_dishes
    ADD CONSTRAINT dish_fk FOREIGN KEY (dish_id)
    REFERENCES public.dishes (dish_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;